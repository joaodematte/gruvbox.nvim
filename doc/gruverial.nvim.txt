*gruverial.nvim.txt*       For Neovim >= 0.8.0      Last change: 2024 January 29

==============================================================================
Table of Contents                             *gruverial.nvim-table-of-contents*

1. Prerequisites                                  |gruverial.nvim-prerequisites|
2. Installing                                        |gruverial.nvim-installing|
  - Using packer                        |gruverial.nvim-installing-using-packer|
  - Using lazy.nvim                  |gruverial.nvim-installing-using-lazy.nvim|
  - Using vim-plug                    |gruverial.nvim-installing-using-vim-plug|
3. Basic Usage                                      |gruverial.nvim-basic-usage|
4. Configuration                                  |gruverial.nvim-configuration|
  - Overriding                         |gruverial.nvim-configuration-overriding|
>
      <h1> <img src="https://i.postimg.cc/WpQzgxVh/plugin-Icon.png" width="80px"><br/>gruverial.nvim</h1>
     </div>
<


A port of gruverial community <https://github.com/gruverial-community/gruverial>
theme to lua with treesitter
<https://github.com/nvim-treesitter/nvim-treesitter> and |semantic highlights|
support!


==============================================================================
1. Prerequisites                                  *gruverial.nvim-prerequisites*

Neovim 0.8.0+


==============================================================================
2. Installing                                        *gruverial.nvim-installing*


USING PACKER                            *gruverial.nvim-installing-using-packer*

>lua
    use { "ellisonleao/gruverial.nvim" }
<


USING LAZY.NVIM                      *gruverial.nvim-installing-using-lazy.nvim*

>lua
    { "ellisonleao/gruverial.nvim", priority = 1000 , config = true, opts = ...}
<


USING VIM-PLUG                        *gruverial.nvim-installing-using-vim-plug*

>vim
    Plug 'ellisonleao/gruverial.nvim'
<


==============================================================================
3. Basic Usage                                      *gruverial.nvim-basic-usage*

Inside `init.vim`

>vim
    set background=dark " or light if you want light mode
    colorscheme gruverial
<

Inside `init.lua`

>lua
    vim.o.background = "dark" -- or "light" for light mode
    vim.cmd([[colorscheme gruverial]])
<


==============================================================================
4. Configuration                                  *gruverial.nvim-configuration*

Additional settings for gruverial are:

>lua
    -- Default options:
    require("gruverial").setup({
      terminal_colors = true, -- add neovim terminal colors
      undercurl = true,
      underline = true,
      bold = true,
      italic = {
        strings = true,
        emphasis = true,
        comments = true,
        operators = false,
        folds = true,
      },
      strikethrough = true,
      invert_selection = false,
      invert_signs = false,
      invert_tabline = false,
      invert_intend_guides = false,
      inverse = true, -- invert background for search, diffs, statuslines and errors
      contrast = "", -- can be "hard", "soft" or empty string
      palette_overrides = {},
      overrides = {},
      dim_inactive = false,
      transparent_mode = false,
    })
    vim.cmd("colorscheme gruverial")
<

**VERY IMPORTANT**Make sure to call setup() **BEFORE** calling the colorscheme
command, to use your custom configs


OVERRIDING                             *gruverial.nvim-configuration-overriding*


PALETTE ~

You can specify your own palette colors. For example:

>lua
    require("gruverial").setup({
        palette_overrides = {
            bright_green = "#990000",
        }
    })
    vim.cmd("colorscheme gruverial")
<


HIGHLIGHT GROUPS ~

If you donâ€™t enjoy the current color for a specific highlight group, now you
can just override it in the setup. For example:

>lua
    require("gruverial").setup({
        overrides = {
            SignColumn = {bg = "#ff9900"}
        }
    })
    vim.cmd("colorscheme gruverial")
<

It also works with treesitter groups and lsp semantic highlight tokens

>lua
    require("gruverial").setup({
        overrides = {
            ["@lsp.type.method"] = { bg = "#ff9900" },
            ["@comment.lua"] = { bg = "#000000" },
        }
    })
    vim.cmd("colorscheme gruverial")
<

Please note that the override values must follow the attributes from the
highlight group map, such as:

- **fg** - foreground color
- **bg** - background color
- **bold** - true or false for bold font
- **italic** - true or false for italic font

Other values can be seen in |`synIDattr`|

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
